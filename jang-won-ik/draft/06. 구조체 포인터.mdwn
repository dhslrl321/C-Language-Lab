# 구조체 포인터

- 구조체는 여러 자료형이 모여 하나의 자료형을 구성하는 것이므로 **크기가 큼**
  - 그래서 구조체 변수를 사용할 때 마다 할당하는 것은 비효율적임
  - 포인터에 메모리를 할당해서 사용하는 편이 효율적임

# 구조체 포인터 선언하고 메모리 할당하기

- `struct 구조체_이름 *포인터_이름 = malloc(sizeof(struct 구조체_이름));`

# 화살표 연산: 구조체 포인터에 값 할당하기

- 구조체 포인터에 값을 할당하기 위해서는 **화살표 연산**을 해야함
- 구조체 포인터 안의 구조체 변수에 쉽게 접근할 수 있게 함
  - 화살표 연산을 사용할 경우
    - `pointer -> age = 14`
  - 화살표 연산을 사용하지 않을 경우 (괄호와 역참조 이용)
    - `(*pointer).age = 14;`

# 구조체의 멤버가 포인터인 경우 역참조 하기

- 구조체의 멤버가 **포인터 변수**일 때, 역참조

```c

```
