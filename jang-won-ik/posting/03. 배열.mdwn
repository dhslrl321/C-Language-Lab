[##_Image|kage@woxWE/btq7SMNlXab/bzNouN2jeIS0xf46Eeb0R0/img.png|alignCenter|data-origin-width="960" data-origin-height="496" width="641" height="331" data-ke-mobilestyle="widthOrigin"|||_##]

# 배열

CS 분야에서 배열은 가장 **기본적인 자료구조**이다.

#### 배열은 같은 데이터 타입의 데이터들이 **순차적으로** 저장되는 자료구조이다. 즉 메모리 주소가 연속되어야 한다.

메모리 주소가 연속되어야 한다는 특성 때문에 **임의로 배열의 크기를 늘리거나 줄이는 것이 불가능** 하다는 특성이 존재한다.

그래서 만약 배열의 크기가 늘어나야할 때는 **새로운 배열을 만들고 기존 내용을 복사**하는 형태로 사용하곤 한다.

이렇게만 본다면 배열이 안 좋아보일 수 있다. 자료구조에 등장하는 **연결 리스트**가 더 좋아보일 수 있지만 모든 상황에서 배열이 안 좋은 것은 아니다.

배열은 index 값을 토대로 원소에 접근하기 때문에 탐색에서의 시간 복잡도가 `O(1)` 으로 상수 시간이 든다.

그래서 간단한 곳에서 자주 사용된다.

# C 언어에서의 배열

C 언어 에서 배열은 **기본 자료형**으로 제공된다.

앞서 이야기했듯 배열은 **고정된 크기의 연속된 메모리**라고 했었다.
